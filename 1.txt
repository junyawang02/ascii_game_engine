==234919== Memcheck, a memory error detector
==234919== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==234919== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==234919== Command: ./main
==234919== 
==234919== Invalid read of size 8
==234919==    at 0x12C5CA: std::__uniq_ptr_impl<Movement, std::default_delete<Movement> >::_M_ptr() const (unique_ptr.h:154)
==234919==    by 0x12C20D: std::unique_ptr<Movement, std::default_delete<Movement> >::get() const (unique_ptr.h:361)
==234919==    by 0x12BD7B: std::unique_ptr<Movement, std::default_delete<Movement> >::operator->() const (unique_ptr.h:355)
==234919==    by 0x12B4C0: Entity::moveVelocity() (entity.cc:108)
==234919==    by 0x13769E: Physics::singleStep(Entity*, std::__cxx11::list<Entity*, std::allocator<Entity*> >&) (physics.cc:65)
==234919==    by 0x139270: State::processEntities(Game&) (state.cc:53)
==234919==    by 0x139570: State::onTick(Game&) (state.cc:73)
==234919==    by 0x12FCC9: Game::go() (game.cc:55)
==234919==    by 0x11C61C: ARLG::ARLG() (arlg.cc:29)
==234919==    by 0x10E985: main (main.cc:4)
==234919==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==234919== 
==234919== 
==234919== Process terminating with default action of signal 11 (SIGSEGV)
==234919==  Access not within mapped region at address 0x28
==234919==    at 0x12C5CA: std::__uniq_ptr_impl<Movement, std::default_delete<Movement> >::_M_ptr() const (unique_ptr.h:154)
==234919==    by 0x12C20D: std::unique_ptr<Movement, std::default_delete<Movement> >::get() const (unique_ptr.h:361)
==234919==    by 0x12BD7B: std::unique_ptr<Movement, std::default_delete<Movement> >::operator->() const (unique_ptr.h:355)
==234919==    by 0x12B4C0: Entity::moveVelocity() (entity.cc:108)
==234919==    by 0x13769E: Physics::singleStep(Entity*, std::__cxx11::list<Entity*, std::allocator<Entity*> >&) (physics.cc:65)
==234919==    by 0x139270: State::processEntities(Game&) (state.cc:53)
==234919==    by 0x139570: State::onTick(Game&) (state.cc:73)
==234919==    by 0x12FCC9: Game::go() (game.cc:55)
==234919==    by 0x11C61C: ARLG::ARLG() (arlg.cc:29)
==234919==    by 0x10E985: main (main.cc:4)
==234919==  If you believe this happened as a result of a stack
==234919==  overflow in your program's main thread (unlikely but
==234919==  possible), you can try to increase the size of the
==234919==  main thread stack using the --main-stacksize= flag.
==234919==  The main thread stack size used in this run was 16777216.
==234919== 
==234919== HEAP SUMMARY:
==234919==     in use at exit: 120,208 bytes in 595 blocks
==234919==   total heap usage: 960 allocs, 365 frees, 214,711 bytes allocated
==234919== 
==234919== LEAK SUMMARY:
==234919==    definitely lost: 0 bytes in 0 blocks
==234919==    indirectly lost: 0 bytes in 0 blocks
==234919==      possibly lost: 0 bytes in 0 blocks
==234919==    still reachable: 120,208 bytes in 595 blocks
==234919==         suppressed: 0 bytes in 0 blocks
==234919== Rerun with --leak-check=full to see details of leaked memory
==234919== 
==234919== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==234919== 
==234919== 1 errors in context 1 of 1:
==234919== Invalid read of size 8
==234919==    at 0x12C5CA: std::__uniq_ptr_impl<Movement, std::default_delete<Movement> >::_M_ptr() const (unique_ptr.h:154)
==234919==    by 0x12C20D: std::unique_ptr<Movement, std::default_delete<Movement> >::get() const (unique_ptr.h:361)
==234919==    by 0x12BD7B: std::unique_ptr<Movement, std::default_delete<Movement> >::operator->() const (unique_ptr.h:355)
==234919==    by 0x12B4C0: Entity::moveVelocity() (entity.cc:108)
==234919==    by 0x13769E: Physics::singleStep(Entity*, std::__cxx11::list<Entity*, std::allocator<Entity*> >&) (physics.cc:65)
==234919==    by 0x139270: State::processEntities(Game&) (state.cc:53)
==234919==    by 0x139570: State::onTick(Game&) (state.cc:73)
==234919==    by 0x12FCC9: Game::go() (game.cc:55)
==234919==    by 0x11C61C: ARLG::ARLG() (arlg.cc:29)
==234919==    by 0x10E985: main (main.cc:4)
==234919==  Address 0x28 is not stack'd, malloc'd or (recently) free'd
==234919== 
==234919== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
